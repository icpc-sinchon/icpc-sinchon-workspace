{
  "openapi": "3.0.0",
  "paths": {
    "/semester": {
      "post": {
        "operationId": "SemesterController_createSemester",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSemesterDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "새로운 학기를 생성합니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SemesterEntity"
                }
              }
            }
          },
          "400": {
            "description": "학기 생성에 실패했습니다."
          }
        },
        "summary": "새로운 학기 생성",
        "tags": [
          "Semester"
        ]
      },
      "get": {
        "operationId": "SemesterController_getAllSemesters",
        "parameters": [],
        "responses": {
          "200": {
            "description": "모든 학기를 반환합니다.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SemesterEntity"
                  }
                }
              }
            }
          },
          "400": {
            "description": "학기를 조회하는 데 실패했습니다."
          }
        },
        "summary": "모든 학기 목록 조회",
        "tags": [
          "Semester"
        ]
      }
    },
    "/semester/{id}": {
      "get": {
        "operationId": "SemesterController_getSemesterById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "특정 ID를 가진 학기를 반환합니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SemesterEntity"
                }
              }
            }
          },
          "400": {
            "description": "학기를 조회하는 데 실패했습니다."
          },
          "404": {
            "description": "학기를 찾을 수 없습니다."
          }
        },
        "summary": "특정 학기 조회",
        "tags": [
          "Semester"
        ]
      },
      "patch": {
        "operationId": "SemesterController_updateSemester",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSemesterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "특정 ID를 가진 학기를 업데이트합니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SemesterEntity"
                }
              }
            }
          },
          "400": {
            "description": "학기 업데이트에 실패했습니다."
          },
          "404": {
            "description": "업데이트하려는 학기를 찾을 수 없습니다."
          }
        },
        "summary": "특정 학기 수정",
        "tags": [
          "Semester"
        ]
      },
      "delete": {
        "operationId": "SemesterController_deleteSemester",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "특정 ID를 가진 학기를 삭제합니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SemesterEntity"
                }
              }
            }
          },
          "400": {
            "description": "학기 삭제에 실패했습니다."
          },
          "404": {
            "description": "삭제하려는 학기를 찾을 수 없습니다."
          }
        },
        "summary": "특정 학기 삭제",
        "tags": [
          "Semester"
        ]
      }
    },
    "/lecture": {
      "post": {
        "operationId": "LectureController_createLecture",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLectureDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "새로운 강의를 생성합니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LectureEntity"
                }
              }
            }
          },
          "400": {
            "description": "강의 생성에 실패했습니다."
          }
        },
        "summary": "새로운 강의 생성",
        "tags": [
          "Lecture"
        ]
      },
      "get": {
        "operationId": "LectureController_getLectures",
        "parameters": [
          {
            "name": "year",
            "required": true,
            "in": "query",
            "description": "조회할 강의가 속한 학기의 연도입니다.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "season",
            "required": true,
            "in": "query",
            "description": "조회할 강의가 속한 학기의 학기(예: Summer, Winter)입니다.",
            "schema": {
              "enum": [
                "Spring",
                "Summer",
                "Fall",
                "Winter"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "특정 학기와 학기에 속한 강의를 반환합니다.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LectureEntity"
                  }
                }
              }
            }
          },
          "400": {
            "description": "강의를 조회하는 데 실패했습니다."
          }
        },
        "summary": "특정 학기의 강의 목록 조회",
        "tags": [
          "Lecture"
        ]
      }
    },
    "/lecture/{id}": {
      "patch": {
        "operationId": "LectureController_updateLecture",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLectureDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "특정 ID를 가진 강의를 업데이트합니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LectureEntity"
                }
              }
            }
          },
          "400": {
            "description": "강의 업데이트에 실패했습니다."
          },
          "404": {
            "description": "업데이트하려는 강의를 찾을 수 없습니다."
          }
        },
        "summary": "특정 강의 수정",
        "tags": [
          "Lecture"
        ]
      },
      "delete": {
        "operationId": "LectureController_deleteLecture",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "특정 ID를 가진 강의를 삭제합니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LectureEntity"
                }
              }
            }
          },
          "400": {
            "description": "강의 삭제에 실패했습니다."
          },
          "404": {
            "description": "삭제하려는 강의를 찾을 수 없습니다."
          }
        },
        "summary": "특정 강의 삭제",
        "tags": [
          "Lecture"
        ]
      }
    },
    "/task": {
      "get": {
        "operationId": "TaskController_getTasksByLecture",
        "parameters": [
          {
            "name": "lectureId",
            "required": true,
            "in": "query",
            "description": "조회할 과제가 속한 강의의 ID입니다.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "특정 강의에 속한 모든 과제를 반환합니다.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskEntity"
                  }
                }
              }
            }
          },
          "400": {
            "description": "과제를 조회하는 데 실패했습니다."
          }
        },
        "summary": "특정 강의의 과제 목록 조회",
        "tags": [
          "Task"
        ]
      },
      "post": {
        "operationId": "TaskController_createTask",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "새로운 과제를 생성합니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskEntity"
                }
              }
            }
          },
          "400": {
            "description": "과제 생성에 실패했습니다."
          }
        },
        "summary": "새로운 과제 생성",
        "tags": [
          "Task"
        ]
      }
    },
    "/task/{id}": {
      "get": {
        "operationId": "TaskController_getTaskById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "특정 ID를 가진 과제를 반환합니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskEntity"
                }
              }
            }
          },
          "400": {
            "description": "과제를 조회하는 데 실패했습니다."
          },
          "404": {
            "description": "과제를 찾을 수 없습니다."
          }
        },
        "summary": "특정 과제 조회",
        "tags": [
          "Task"
        ]
      },
      "patch": {
        "operationId": "TaskController_updateTask",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaskDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "특정 ID를 가진 과제를 업데이트합니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskEntity"
                }
              }
            }
          },
          "400": {
            "description": "과제 업데이트에 실패했습니다."
          },
          "404": {
            "description": "업데이트하려는 과제를 찾을 수 없습니다."
          }
        },
        "summary": "특정 과제 수정",
        "tags": [
          "Task"
        ]
      },
      "delete": {
        "operationId": "TaskController_deleteTask",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "특정 ID를 가진 과제를 삭제합니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskEntity"
                }
              }
            }
          },
          "400": {
            "description": "과제 삭제에 실패했습니다."
          },
          "404": {
            "description": "삭제하려는 과제를 찾을 수 없습니다."
          }
        },
        "summary": "특정 과제 삭제",
        "tags": [
          "Task"
        ]
      }
    },
    "/problem": {
      "get": {
        "operationId": "ProblemController_getProblemsByTask",
        "parameters": [
          {
            "name": "taskId",
            "required": true,
            "in": "query",
            "description": "조회할 문제가 속한 과제의 ID입니다.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "특정 과제에 속한 모든 문제를 반환합니다.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProblemEntity"
                  }
                }
              }
            }
          },
          "400": {
            "description": "문제를 조회하는 데 실패했습니다."
          }
        },
        "summary": "특정 과제의 문제 목록 조회",
        "tags": [
          "Problem"
        ]
      },
      "post": {
        "operationId": "ProblemController_createProblem",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProblemDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "새로운 문제를 생성합니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemEntity"
                }
              }
            }
          },
          "400": {
            "description": "문제 생성에 실패했습니다."
          }
        },
        "summary": "새로운 문제 생성",
        "tags": [
          "Problem"
        ]
      }
    },
    "/problem/{id}": {
      "patch": {
        "operationId": "ProblemController_updateProblem",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProblemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "특정 ID를 가진 문제를 업데이트합니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemEntity"
                }
              }
            }
          },
          "400": {
            "description": "문제 업데이트에 실패했습니다."
          },
          "404": {
            "description": "업데이트하려는 문제를 찾을 수 없습니다."
          }
        },
        "summary": "특정 문제 수정",
        "tags": [
          "Problem"
        ]
      },
      "delete": {
        "operationId": "ProblemController_deleteProblem",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "특정 ID를 가진 문제를 삭제합니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemEntity"
                }
              }
            }
          },
          "400": {
            "description": "문제 삭제에 실패했습니다."
          },
          "404": {
            "description": "삭제하려는 문제를 찾을 수 없습니다."
          }
        },
        "summary": "특정 문제 삭제",
        "tags": [
          "Problem"
        ]
      }
    },
    "/student": {
      "get": {
        "operationId": "StudentController_getAllStudents",
        "parameters": [],
        "responses": {
          "200": {
            "description": "모든 학생을 반환합니다.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StudentEntity"
                  }
                }
              }
            }
          },
          "400": {
            "description": "학생을 조회하는 데 실패했습니다."
          }
        },
        "summary": "모든 학생 목록 조회",
        "tags": [
          "Student"
        ]
      },
      "post": {
        "operationId": "StudentController_createStudent",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStudentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "새로운 학생을 생성합니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentEntity"
                }
              }
            }
          },
          "400": {
            "description": "학생 생성에 실패했습니다."
          }
        },
        "summary": "새로운 학생 생성",
        "tags": [
          "Student"
        ]
      }
    },
    "/student/{id}": {
      "get": {
        "operationId": "StudentController_findStudentById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "특정 ID를 가진 학생을 반환합니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentEntity"
                }
              }
            }
          },
          "400": {
            "description": "학생을 조회하는 데 실패했습니다."
          },
          "404": {
            "description": "학생을 찾을 수 없습니다."
          }
        },
        "summary": "특정 학생 조회",
        "tags": [
          "Student"
        ]
      },
      "patch": {
        "operationId": "StudentController_updateStudent",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStudentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "특정 ID를 가진 학생을 업데이트합니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentEntity"
                }
              }
            }
          },
          "400": {
            "description": "학생 업데이트에 실패했습니다."
          },
          "404": {
            "description": "업데이트하려는 학생을 찾을 수 없습니다."
          }
        },
        "summary": "특정 학생 수정",
        "tags": [
          "Student"
        ]
      },
      "delete": {
        "operationId": "StudentController_deleteStudent",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "특정 ID를 가진 학생을 삭제합니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentEntity"
                }
              }
            }
          },
          "400": {
            "description": "학생 삭제에 실패했습니다."
          },
          "404": {
            "description": "삭제하려는 학생을 찾을 수 없습니다."
          }
        },
        "summary": "특정 학생 삭제",
        "tags": [
          "Student"
        ]
      }
    },
    "/student-lecture/semester/{year}/{season}": {
      "get": {
        "operationId": "StudentLectureController_getStudentsWithLectureLevelsBySemester",
        "parameters": [
          {
            "name": "year",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "season",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "해당 학기에 수강 중인 학생 목록을 반환합니다.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StudentEntity"
                  }
                }
              }
            }
          },
          "400": {
            "description": "학생울 조회하는 데 실패했습니다."
          }
        },
        "summary": "특정 학기의 수강생 목록 조회",
        "tags": [
          "StudentLecture"
        ]
      }
    },
    "/student-lecture": {
      "post": {
        "operationId": "StudentLectureController_createStudentWithLectureLog",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStudentLectureDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "새로운 학생과 강의 로그를 생성합니다."
          },
          "400": {
            "description": "학생 생성에 실패했습니다."
          }
        },
        "summary": "새로운 학생과 강의 로그 생성",
        "tags": [
          "StudentLecture"
        ]
      }
    },
    "/student-lecture/multiple": {
      "post": {
        "operationId": "StudentLectureController_createMultipleStudents",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "새로운 여러 학생과 강의 로그를 생성합니다."
          },
          "400": {
            "description": "학생 생성에 실패했습니다."
          }
        },
        "summary": "새로운 여러 학생과 강의 로그 생성",
        "tags": [
          "StudentLecture"
        ]
      }
    },
    "/auth/users": {
      "get": {
        "operationId": "AuthController_allUsers",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/logout": {
      "post": {
        "operationId": "AuthController_logout",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    }
  },
  "info": {
    "title": "Sinchon Admin Backend",
    "description": "신촌연합 관리자 페이지 API 문서",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "CreateSemesterDto": {
        "type": "object",
        "properties": {
          "year": {
            "type": "number",
            "minimum": 1,
            "description": "해당 학기가 속한 연도 (예: 2024)",
            "example": 2024
          },
          "season": {
            "type": "string",
            "description": "해당 학기가 속한 계절 (Spring, Summer, Fall, Winter 중 하나)",
            "enum": [
              "Spring",
              "Summer",
              "Fall",
              "Winter"
            ],
            "example": "Summer"
          }
        },
        "required": [
          "year",
          "season"
        ]
      },
      "SemesterEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "고유 ID 값"
          },
          "year": {
            "type": "number",
            "description": "해당 학기가 속한 연도. ex) 2024"
          },
          "season": {
            "type": "string",
            "enum": [
              "Spring",
              "Summer",
              "Fall",
              "Winter"
            ],
            "description": "해당 학기가 속한 계절. ex) Summer"
          }
        },
        "required": [
          "id",
          "year",
          "season"
        ]
      },
      "UpdateSemesterDto": {
        "type": "object",
        "properties": {
          "year": {
            "type": "number",
            "minimum": 1,
            "description": "해당 학기가 속한 연도 (예: 2024)",
            "example": 2024
          },
          "season": {
            "type": "string",
            "description": "해당 학기가 속한 계절 (Spring, Summer, Fall, Winter 중 하나)",
            "enum": [
              "Spring",
              "Summer",
              "Fall",
              "Winter"
            ],
            "example": "Summer"
          }
        }
      },
      "CreateLectureDto": {
        "type": "object",
        "properties": {
          "level": {
            "type": "string",
            "enum": [
              "Novice",
              "Advanced",
              "Expert"
            ],
            "description": "강의 난이도 (Novice, Intermediate, Advanced)"
          },
          "lectureNumber": {
            "type": "number",
            "minimum": 1,
            "description": "강의 회차수 (기본값: 10)"
          },
          "bojGroupId": {
            "type": "number",
            "description": "BOJ 그룹 ID"
          },
          "semesterId": {
            "type": "number",
            "minimum": 1,
            "description": "학기 ID (Semester의 id 값)"
          }
        },
        "required": [
          "level",
          "lectureNumber",
          "bojGroupId",
          "semesterId"
        ]
      },
      "LectureEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "고유 ID 값"
          },
          "level": {
            "type": "string",
            "enum": [
              "Novice",
              "Advanced",
              "Expert"
            ],
            "description": "강의 난이도. 초급, 중급, 고급 중 하나"
          },
          "lectureNumber": {
            "type": "number",
            "description": "강의의 총 회차수. 기본값은 10회차"
          },
          "bojGroupId": {
            "type": "number",
            "description": "강의에 연계된 BOJ 그룹 ID. 학생의 과제 출석체크를 위한 크롤링에 쓰임"
          },
          "semesterId": {
            "type": "number",
            "description": "강의가 속한 학기의 ID"
          }
        },
        "required": [
          "id",
          "level",
          "lectureNumber",
          "bojGroupId",
          "semesterId"
        ]
      },
      "UpdateLectureDto": {
        "type": "object",
        "properties": {
          "level": {
            "type": "string",
            "enum": [
              "Novice",
              "Advanced",
              "Expert"
            ],
            "description": "강의 난이도 (Novice, Intermediate, Advanced)"
          },
          "lectureNumber": {
            "type": "number",
            "minimum": 1,
            "description": "강의 회차수 (기본값: 10)"
          },
          "bojGroupId": {
            "type": "number",
            "description": "BOJ 그룹 ID"
          },
          "semesterId": {
            "type": "number",
            "minimum": 1,
            "description": "학기 ID (Semester의 id 값)"
          }
        }
      },
      "TaskEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "고유 ID 값"
          },
          "round": {
            "type": "number",
            "description": "과제가 속한 강의의 회차"
          },
          "practiceId": {
            "type": "number",
            "description": "해당 강의의 BOJ 그룹 내에서 과제를 나타내는 연습의 ID (BOJ 크롤링 시 사용)"
          },
          "minSolveCount": {
            "type": "number",
            "description": "과제 출석 여부를 판단하기 위한 기준 문제 수"
          },
          "lectureId": {
            "type": "number",
            "description": "과제가 속한 강의의 ID"
          }
        },
        "required": [
          "id",
          "round",
          "practiceId",
          "minSolveCount",
          "lectureId"
        ]
      },
      "CreateTaskDto": {
        "type": "object",
        "properties": {
          "round": {
            "type": "number",
            "description": "강의 회차 (round)"
          },
          "practiceId": {
            "type": "number",
            "description": "BOJ 그룹 내 연습 ID (practiceId)"
          },
          "lectureId": {
            "type": "number",
            "description": "연결된 강의 ID (Lecture의 id 값)"
          },
          "minSolveCount": {
            "type": "number",
            "description": "출석 여부를 판단하는 최소 문제 해결 수"
          }
        },
        "required": [
          "round",
          "practiceId",
          "lectureId",
          "minSolveCount"
        ]
      },
      "CreateProblemDto": {
        "type": "object",
        "properties": {
          "bojProblemNumber": {
            "type": "number",
            "description": "BOJ 문제 번호"
          },
          "essential": {
            "type": "boolean",
            "description": "필수 문제 여부"
          },
          "taskId": {
            "type": "number",
            "minimum": 1,
            "description": "과제 ID (Task의 id 값)"
          }
        },
        "required": [
          "bojProblemNumber",
          "essential",
          "taskId"
        ]
      },
      "UpdateTaskDto": {
        "type": "object",
        "properties": {
          "round": {
            "type": "number",
            "description": "강의 회차 (round)"
          },
          "practiceId": {
            "type": "number",
            "description": "BOJ 그룹 내 연습 ID (practiceId)"
          },
          "lectureId": {
            "type": "number",
            "description": "연결된 강의 ID (Lecture의 id 값)"
          },
          "minSolveCount": {
            "type": "number",
            "description": "출석 여부를 판단하는 최소 문제 해결 수"
          },
          "problems": {
            "description": "문제 배열 (BOJ 문제 정보)",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateProblemDto"
            }
          }
        }
      },
      "ProblemEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "고유 ID 값"
          },
          "bojProblemNumber": {
            "type": "number",
            "description": "문제의 BOJ 번호"
          },
          "essential": {
            "type": "boolean",
            "description": "해당 문제가 과제의 필수 문제인지 여부. 기본값은 true"
          },
          "taskId": {
            "type": "number",
            "description": "해당 문제가 속한 과제의 ID"
          }
        },
        "required": [
          "id",
          "bojProblemNumber",
          "essential",
          "taskId"
        ]
      },
      "UpdateProblemDto": {
        "type": "object",
        "properties": {
          "bojProblemNumber": {
            "type": "number",
            "description": "BOJ 문제 번호"
          },
          "essential": {
            "type": "boolean",
            "description": "필수 문제 여부"
          },
          "taskId": {
            "type": "number",
            "minimum": 1,
            "description": "과제 ID (Task의 id 값)"
          }
        }
      },
      "StudentEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "고유 ID 값"
          },
          "name": {
            "type": "string",
            "description": "학생의 이름"
          },
          "bojHandle": {
            "type": "string",
            "description": "학생의 BOJ 핸들 (문제풀이 체크 및 관리에 사용)"
          },
          "email": {
            "type": "string",
            "description": "학생의 이메일"
          },
          "phone": {
            "type": "string",
            "description": "학생의 전화번호"
          },
          "school": {
            "type": "string",
            "enum": [
              "YONSEI",
              "SOGANG",
              "HONGIK",
              "EWHA",
              "SOOKMYUNG"
            ],
            "description": "학생이 소속된 학교. 연세대, 서강대, 홍익대, 이화여대, 숙명여대 중 하나"
          },
          "studentNumber": {
            "type": "string",
            "description": "학생의 학번"
          }
        },
        "required": [
          "id",
          "name",
          "bojHandle",
          "email",
          "phone",
          "school",
          "studentNumber"
        ]
      },
      "CreateStudentDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "학생 이름 (최대 50자)"
          },
          "bojHandle": {
            "type": "string",
            "description": "BOJ 핸들 (최대 50자, 고유값)"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "학생 이메일"
          },
          "phone": {
            "type": "string",
            "description": "학생 전화번호 (최대 20자)"
          },
          "school": {
            "type": "string",
            "enum": [
              "YONSEI",
              "SOGANG",
              "HONGIK",
              "EWHA",
              "SOOKMYUNG"
            ],
            "description": "학생 학교 (YONSEI, SOGANG, HONGIK, EWHA, SOOKMYUNG 중 하나)"
          },
          "studentNumber": {
            "type": "string",
            "description": "학생 학번 (최대 20자)"
          }
        },
        "required": [
          "name",
          "bojHandle",
          "email",
          "phone",
          "school",
          "studentNumber"
        ]
      },
      "UpdateStudentDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "학생 이름 (최대 50자)"
          },
          "bojHandle": {
            "type": "string",
            "description": "BOJ 핸들 (최대 50자, 고유값)"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "학생 이메일"
          },
          "phone": {
            "type": "string",
            "description": "학생 전화번호 (최대 20자)"
          },
          "school": {
            "type": "string",
            "enum": [
              "YONSEI",
              "SOGANG",
              "HONGIK",
              "EWHA",
              "SOOKMYUNG"
            ],
            "description": "학생 학교 (YONSEI, SOGANG, HONGIK, EWHA, SOOKMYUNG 중 하나)"
          },
          "studentNumber": {
            "type": "string",
            "description": "학생 학번 (최대 20자)"
          }
        }
      },
      "CreateStudentLectureDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "학생 이름 (최대 50자)"
          },
          "bojHandle": {
            "type": "string",
            "description": "BOJ 핸들 (최대 50자, 고유값)"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "학생 이메일"
          },
          "phone": {
            "type": "string",
            "description": "학생 전화번호 (최대 20자)"
          },
          "school": {
            "type": "string",
            "enum": [
              "YONSEI",
              "SOGANG",
              "HONGIK",
              "EWHA",
              "SOOKMYUNG"
            ],
            "description": "학생 학교 (YONSEI, SOGANG, HONGIK, EWHA, SOOKMYUNG 중 하나)"
          },
          "studentNumber": {
            "type": "string",
            "description": "학생 학번 (최대 20자)"
          },
          "paymentStatus": {
            "type": "string",
            "enum": [
              "Refund",
              "NonRefund"
            ],
            "description": "학생 납부 상태 (PAID_30000, PAID_60000 중 하나)"
          },
          "refundAccount": {
            "type": "string",
            "description": "환불 계좌"
          },
          "lectureInfo": {
            "type": "object",
            "description": "강의 정보",
            "example": {
              "year": 2025,
              "season": "Winter",
              "level": "Novice"
            }
          },
          "studentLectureLogInfo": {
            "type": "object",
            "description": "학생 강의 수강 로그",
            "example": {
              "refundOption": "Refund",
              "refundAccount": "123-4567-890"
            }
          }
        },
        "required": [
          "name",
          "bojHandle",
          "email",
          "phone",
          "school",
          "studentNumber",
          "paymentStatus",
          "refundAccount",
          "lectureInfo",
          "studentLectureLogInfo"
        ]
      },
      "SignInDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "username",
          "password"
        ]
      }
    }
  }
}