CREATE DATABASE IF NOT EXISTS attendance_db;
USE attendance_db;

CREATE TABLE IF NOT EXISTS `student` (
	`id`	INT	NOT NULL AUTO_INCREMENT PRIMARY KEY	COMMENT 'AUTO INCREMENT',
	`boj_handle`	VARCHAR(255)	NOT NULL	COMMENT '[A-Za-z0-9_]{3, 20}',
	`email`	VARCHAR(255)	NOT NULL,
	`phone`	VARCHAR(255)	NOT NULL	COMMENT '000-0000-0000',
	`is_refund` BOOLEAN NOT NULL DEFAULT False,
    `amount` INT NOT NULL DEFAULT 3,
    `is_invited`	BOOLEAN	NOT NULL	DEFAULT True,
	`is_canceled`	BOOLEAN	NOT NULL	DEFAULT False,
	`school`	VARCHAR(255)	NOT NULL	COMMENT '"OO대학교" 로 통일하기'
);

CREATE TABLE IF NOT EXISTS `lecture` (
	`id`	INT	NOT NULL AUTO_INCREMENT PRIMARY KEY	COMMENT 'AUTO INCREMENT',
	`year`	INT	NOT NULL,
	`season` VARCHAR(255) NOT NULL DEFAULT 'Summer',
	`level`	INT	NOT NULL	COMMENT '1, 2, 3 순으로 어려워짐',
	`lecture_num`	INT	NOT NULL	DEFAULT 10
);

CREATE TABLE IF NOT EXISTS `student-log` (
	`id`	INT	NOT NULL AUTO_INCREMENT PRIMARY KEY	COMMENT 'AUTO INCREMENT',
	`student_id`	INT	NOT NULL	COMMENT 'FK',
	`lecture_id`	INT	NOT NULL	COMMENT 'FK'
);

CREATE TABLE IF NOT EXISTS `weekly-check-log` (
	`id`	INT	NOT NULL AUTO_INCREMENT PRIMARY KEY	COMMENT 'AUTO INCREMENT',
	`round`	INT	NOT NULL	COMMENT '1, 2, 3, 4,...(회차)',
	`attend_done`	BOOLEAN	NOT NULL	DEFAULT False,
	`task_done`	BOOLEAN	NOT NULL	DEFAULT False,
	`student_id`	INT	NOT NULL	COMMENT 'FK',
	`lecture_id`	INT	NOT NULL	COMMENT 'FK'
);

CREATE TABLE IF NOT EXISTS `task` (
	`ID`	INT	NOT NULL AUTO_INCREMENT PRIMARY KEY	COMMENT 'AUTO INCREMENT',
	`lecture_id`	INT	NOT NULL	COMMENT 'FK',
	`round`	INT	NOT NULL	COMMENT '1, 2, 3, 4...(회차)',
	`group_id`	INT	NOT NULL	COMMENT '/group/{group_id}',
	`practice_id`	INT	NOT NULL	COMMENT 'group/practice/view/{group_id}/{practice_id}}',
	`cutline`	INT	NOT NULL	COMMENT '전체 중 {cutline} 개를 풀면 출석'
);

CREATE TABLE IF NOT EXISTS `admin` (
	`id`	INT	NOT NULL AUTO_INCREMENT PRIMARY KEY	COMMENT 'AUTO INCREMENT',
	`username`	VARCHAR(255)	NOT NULL	COMMENT '아이디 정책?',
	`password`	VARCHAR(255)	NOT NULL	COMMENT '비번 정책?'
);

CREATE TABLE IF NOT EXISTS `boj` (
	`id`	INT	NOT NULL AUTO_INCREMENT PRIMARY KEY	COMMENT 'AUTO INCREMENT',
	`student_id`	INT	NOT NULL	COMMENT 'AUTO INCREMENT',
	`boj`	INT	NOT NULL	COMMENT '/problem/{boj}',
	`is_solved`	BOOLEAN	NOT NULL	DEFAULT False,
	`update_date`	DATE	NOT NULL	COMMENT 'YYYY-MM-DD'
);

-- 외래키 추가
ALTER TABLE `student-log` ADD
FOREIGN KEY(student_id) REFERENCES student(id) ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE `student-log` ADD
FOREIGN KEY(lecture_id) REFERENCES lecture(id) ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE `weekly-check-log` ADD
FOREIGN KEY(student_id) REFERENCES student(id) ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE `weekly-check-log` ADD
FOREIGN KEY(lecture_id) REFERENCES lecture(id) ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE `task` ADD
FOREIGN KEY(lecture_id) REFERENCES lecture(id) ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE `boj` ADD
FOREIGN KEY(student_id) REFERENCES student(id) ON UPDATE CASCADE ON DELETE CASCADE;