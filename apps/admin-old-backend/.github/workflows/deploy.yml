name: Deploy to Google Compute Engine

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up environment variables
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env

      - name: Build and push Docker images
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          docker build \
          --build-arg DATABASE_URL=${DATABASE_URL} \
          -t ghcr.io/${{ github.repository }}/node-app .
          docker push ghcr.io/${{ github.repository }}/node-app

      - name: google auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCE_SERVICE_ACCOUNT_KEY }}

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: ">= 363.0.0"
          project_id: ${{ secrets.GCE_PROJECT_ID }}

      - name: Deploy to Google Compute Engine
        env:
          GCE_INSTANCE: ${{ secrets.GCE_USERNAME }}@${{ secrets.GCE_INSTANCE_NAME }}
          GCE_ZONE: ${{ secrets.GCE_INSTANCE_ZONE }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
          DISCORD_ALARM_CHANNEL_ID: ${{ secrets.DISCORD_ALARM_CHANNEL_ID }}
          DISCORD_NOVICE_CHANNEL_ID: ${{ secrets.DISCORD_NOVICE_CHANNEL_ID }}
          DISCORD_ADVANCED_CHANNEL_ID: ${{ secrets.DISCORD_ADVANCED_CHANNEL_ID }}
          SINCHON_BOJ_ID: ${{ secrets.SINCHON_BOJ_ID }}
          SINCHON_BOJ_PW: ${{ secrets.SINCHON_BOJ_PW }}
        run: |
          gcloud compute scp docker-compose.prod.yml ${GCE_INSTANCE}:~/docker-compose.yml --zone ${GCE_ZONE}
          gcloud compute scp Dockerfile ${GCE_INSTANCE}:~/Dockerfile --zone ${GCE_ZONE}
          gcloud compute scp --recurse ./prisma ${GCE_INSTANCE}:~/prisma --zone ${GCE_ZONE}
          gcloud compute ssh ${GCE_INSTANCE} --zone ${GCE_ZONE} --command "
            echo \"MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}\" > .env
            echo \"DATABASE_URL=${DATABASE_URL}\" >> .env
            echo \"JWT_SECRET=${JWT_SECRET}\" >> .env
            echo \"DB_HOST=${DB_HOST}\" >> .env
            echo \"DB_PORT=${DB_PORT}\" >> .env
            echo \"DB_USER=${DB_USER}\" >> .env
            echo \"DB_PASS=${DB_PASS}\" >> .env
            echo \"DB_NAME=${DB_NAME}\" >> .env
            echo \"DISCORD_TOKEN=${DISCORD_TOKEN}\" >> .env
            echo \"DISCORD_ALARM_CHANNEL_ID=${DISCORD_ALARM_CHANNEL_ID}\" >> .env
            echo \"DISCORD_NOVICE_CHANNEL_ID=${DISCORD_NOVICE_CHANNEL_ID}\" >> .env
            echo \"DISCORD_ADVANCED_CHANNEL_ID=${DISCORD_ADVANCED_CHANNEL_ID}\" >> .env
            echo \"SINCHON_BOJ_ID=${SINCHON_BOJ_ID}\" >> .env
            echo \"SINCHON_BOJ_PW=${SINCHON_BOJ_PW}\" >> .env
            docker system prune -af
            docker-compose down
            docker-compose pull
            sudo docker-compose --env-file .env up -d
          "
